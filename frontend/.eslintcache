[{"/home/wsl-tom/git/side-projects/2d-shooter-2020/frontend/src/index.tsx":"1","/home/wsl-tom/git/side-projects/2d-shooter-2020/frontend/src/App.tsx":"2","/home/wsl-tom/git/side-projects/2d-shooter-2020/frontend/src/inputSystem.ts":"3","/home/wsl-tom/git/side-projects/2d-shooter-2020/frontend/src/constants/keybinds.ts":"4","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/index.tsx":"5","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/constants/keybinds.ts":"6","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/Simulator.ts":"7","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/PhaserEntityRenderer.ts":"8","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/InputSystem.ts":"9","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/game/Main.tsx":"10","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/scenes/main-scene.ts":"11","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/scenes/level-one.ts":"12","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/game/index.ts":"13","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/app/store.ts":"14","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/counter/counterSlice.ts":"15","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/counter/counterAPI.ts":"16","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/counter/Counter.tsx":"17","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/app/hooks.ts":"18","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/toolbar/toolbarSlice.ts":"19","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/toolbar/Toolbar.tsx":"20","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/gameinfo/gameInfoSlice.ts":"21","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/gameinfo/GameInfo.tsx":"22","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/playerhud/playerHUDSlice.ts":"23","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/playerhud/PlayerHUD.tsx":"24"},{"size":197,"mtime":1610800520788,"results":"25","hashOfConfig":"26"},{"size":12240,"mtime":1611507850330,"results":"27","hashOfConfig":"26"},{"size":994,"mtime":1610809232450,"results":"28","hashOfConfig":"26"},{"size":463,"mtime":1608673148839,"results":"29","hashOfConfig":"26"},{"size":590,"mtime":1621286062620,"results":"30","hashOfConfig":"31"},{"size":463,"mtime":1612009952096,"results":"32","hashOfConfig":"33"},{"size":7350,"mtime":1624482601000,"results":"34","hashOfConfig":"31"},{"size":5060,"mtime":1621288495430,"results":"35","hashOfConfig":"31"},{"size":3734,"mtime":1620928837200,"results":"36","hashOfConfig":"31"},{"size":1450,"mtime":1621282316900,"results":"37","hashOfConfig":"31"},{"size":5172,"mtime":1621283440080,"results":"38","hashOfConfig":"31"},{"size":3109,"mtime":1624482137200,"results":"39","hashOfConfig":"31"},{"size":497,"mtime":1612218440580,"results":"40","hashOfConfig":"31"},{"size":737,"mtime":1621285971000,"results":"41","hashOfConfig":"31"},{"size":2988,"mtime":1620674782780,"results":"42","hashOfConfig":"31"},{"size":221,"mtime":1620674762170,"results":"43","hashOfConfig":"31"},{"size":1839,"mtime":1620850933939,"results":"44","hashOfConfig":"31"},{"size":349,"mtime":1620675474440,"results":"45","hashOfConfig":"31"},{"size":1048,"mtime":1620852295119,"results":"46","hashOfConfig":"31"},{"size":990,"mtime":1620930256700,"results":"47","hashOfConfig":"31"},{"size":941,"mtime":1621285225050,"results":"48","hashOfConfig":"31"},{"size":994,"mtime":1621286250010,"results":"49","hashOfConfig":"31"},{"size":899,"mtime":1624482369650,"results":"50","hashOfConfig":"31"},{"size":1425,"mtime":1621288388820,"results":"51","hashOfConfig":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ouzttf",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"ghla1v",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4mqxxv",{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"63"},"/home/wsl-tom/git/side-projects/2d-shooter-2020/frontend/src/index.tsx",[],["110","111"],"/home/wsl-tom/git/side-projects/2d-shooter-2020/frontend/src/App.tsx",["112"],"/home/wsl-tom/git/side-projects/2d-shooter-2020/frontend/src/inputSystem.ts",["113"],"/home/wsl-tom/git/side-projects/2d-shooter-2020/frontend/src/constants/keybinds.ts",[],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/index.tsx",[],["114","115"],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/constants/keybinds.ts",[],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/Simulator.ts",["116","117","118"],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/PhaserEntityRenderer.ts",["119","120"],"\nimport nengi from 'nengi'\nimport PlayerGraphicClient from '../../common/graphics/PlayerGraphicClient'\nimport BotGraphicClient from '../../common/graphics/BotGraphicClient'\nimport { entityTypes, messageTypes } from '../../common/types/types'\nimport { SCENE_NAMES } from './game/index'\nimport BulletGraphicClient from '../../common/graphics/BulletGraphicClient'\nimport ZombieWaveMessage from '../../common/message/ZombieWaveMessage'\nimport ClientHudMessage from '../../common/message/ClientHudMessage'\n\nclass PhaserEntityRenderer {\n\n    entities: Map<number, any>\n    scene: Phaser.Scene\n    myId: string\n    myEntity: Phaser.GameObjects.Sprite\n    sceneMap: Phaser.Tilemaps.Tilemap\n\n    healthText: Phaser.GameObjects.Text\n    waveInfoText: Phaser.GameObjects.Text\n    hudText: Phaser.GameObjects.Text\n    stageText: Phaser.GameObjects.Text\n\n    constructor(scene: Phaser.Scene, sceneMap: Phaser.Tilemaps.Tilemap ) {\n        this.scene = scene\n        this.entities = new Map()\n        this.sceneMap = sceneMap\n    }\n\n    createEntity(entity: any) {\n        console.log(`creating new ${entity.protocol.name} entity ( Renderer )`)\n\n        if (entity.protocol.name === entityTypes.PLAYER_ENTITY) {\n            const clientEntity = new PlayerGraphicClient(this.scene, entity.x, entity.y)\n            this.scene.add.existing(clientEntity)\n            this.entities.set(entity.nid, clientEntity)\n\n            // We may already have an identity, in which case follow at point of recieving entity\n            if (entity.nid === this.myId) {\n                this.myEntity = clientEntity\n                this.setupCamera()\n            }\n        }\n\n        if (entity.protocol.name === entityTypes.BOT_ENTITY) {\n            const botEntity = new BotGraphicClient(this.scene, entity.x, entity.y)\n            this.scene.add.existing(botEntity)\n            this.entities.set(entity.nid, botEntity)\n        }\n\n        if (entity.protocol.name === entityTypes.BULLET_ENTITY) {\n            const bulletEntity = new BulletGraphicClient(this.scene, entity.x, entity.y)\n            this.scene.add.existing(bulletEntity)\n            this.entities.set(entity.nid, bulletEntity)\n        }\n\n    }\n\n    // We may already recieve identity AFTER recieving entities, in which case follow at point of recieving entity\n    assignClientEntity(entityId: number) {\n\n        let clientEntity = this.entities.get(entityId)\n        this.myEntity = clientEntity\n        this.setupCamera()\n    }\n\n    setupCamera() {\n        const camera = this.scene.cameras.main;\n        camera.startFollow(this.myEntity, true, 0.1, 0.1);\n\n        camera.setBounds(0, 0, this.sceneMap.widthInPixels, this.sceneMap.heightInPixels);\n        camera.zoom= 1\n    }\n\n    updateEntity(update: any) {\n        const entity = this.entities.get(update.nid)\n        entity[update.prop] = update.value\n        // debugger\n    }\n\n    deleteEntity(entityId: number) {\n        const entity = this.entities.get(entityId)\n\n        if (entity) {\n            entity.destroy()\n            this.entities.delete(entityId)\n        } else {\n            console.log(`Rendered tried to delete entity ${entityId} that doesn't exist `)\n        }\n    }\n\n    processMessage(message: any) {\n        if (message.protocol.name === messageTypes.IDENTITY) {\n            // Use this to track camera against the correct entity\n            this.myId = message.entityId\n            console.log('Assigned my remote entity ID as ', this.myId)\n        }\n    }\n\n    getMouseCoords() {\n        const pointer = this.scene.input.activePointer\n\n        return {\n            mouseX: pointer.worldX,\n            mouseY: pointer.worldY,\n        }\n\n    }\n\n    displayText(text: string) {\n        const textStyle:any = {\n            fill: \"#ffffff\",\n            align: \"center\",\n            fontSize: 30,\n            fontStyle: \"bold\"\n        };\n\n        const width = Number(this.scene.game.config.width);\n        const height = Number(this.scene.game.config.height);\n\n        if (!this.stageText) {\n            this.stageText = this.scene.add\n                .text(width / 2, height / 2 + 250, text, textStyle)\n                .setOrigin(0.5, 0);\n        } else {\n            this.stageText.text = text\n        }\n\n        // const loadingBar = this.scene.add.graphics();\n        // loadingBar.clear();\n        // loadingBar.fillStyle(0xffffff, 1);\n        // loadingBar.fillRect(width / 2 - 375, height / 2 - 25, 750 * value, 50);\n        // const mod = Phaser.Math.FloorTo(((value * 100) % 3) + 1, 0);\n        // const text = `Loading${\".\".repeat(mod)}${mod <= 2 ? \" \".repeat(3 - mod) : \"\"}`;\n\n    }\n\n    loadLevel(scene: string, nengiClient: nengi.Client) {\n\n        if (!Object.values(SCENE_NAMES).includes(scene as SCENE_NAMES)) {\n            debugger\n            console.warn(\"Unable to find scene \", scene)\n        } else {\n            let sceneName = scene as SCENE_NAMES\n            this.scene.scene.sleep(SCENE_NAMES.MAIN)\n            this.scene.scene.run(SCENE_NAMES[sceneName], { nengiClient })\n        }\n    }\n\n}\n\nexport default PhaserEntityRenderer\n","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/InputSystem.ts",[],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/game/Main.tsx",[],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/scenes/main-scene.ts",["121","122"],"import nengi from \"nengi\";\nimport Phaser from \"phaser\";\nimport nengiConfig from \"../../../common/config/nengiConfig\";\nimport { ExtendedNengiTypes } from \"../../../common/types/custom-nengi-types\";\nimport Simulator from \"../Simulator\";\nimport RequestJoinGame from '../../../common/command/RequestJoinGame'\nimport ModifyToolbarCommand from '../../../common/command/ModifyToolbarCommand'\nimport { store } from '../app/store'\n// const sceneConfig: Phaser.Types.Scenes.SettingsConfig = {\n//   active: false,\n//   visible: false,\n//   key: \"Game\",\n// };\n\nexport class MainScene extends Phaser.Scene {\n  map: Phaser.Tilemaps.Tilemap;\n  worldLayer: Phaser.Tilemaps.StaticTilemapLayer;\n  nengiClient: ExtendedNengiTypes.Client;\n  simulator: Simulator;\n  last_ts: number\n\n  levelName = \"spawn_island\";\n  store: typeof store\n  oldState:  ReturnType<typeof store.getState>\n\n  init({ nengiClient, storeRef }: {nengiClient: any, storeRef: typeof store}) {\n    // super({});\n    this.nengiClient = nengiClient;\n    // try {\n    //     // @ts-ignore\n    //     const { nengiClient } = nengiClient;\n    //     this.nengiClient = nengiClient;\n\n    // } catch (e) {\n    //     console.log(\"Error extracting preBoot data\", e);\n    // }\n\n    // const client = new nengi.Client(\n    //   nengiConfig,\n    //   100\n    // ) as ExtendedNengiTypes.Client;\n    // this.nengiClient = client;\n\n      // Start listening for changes\n      // debugger\n    this.store = storeRef\n    this.store.subscribe(() => this.stateUpdated())\n\n\n  }\n\n  stateUpdated() {\n    // console.log(\"stat eupdated\")\n    const newState = this.store.getState()\n    console.log(newState)\n    // Do we need to make changes?\n\n    if (!this.oldState) {\n      const ModToolbarCommand = new ModifyToolbarCommand(newState.toolbar.selectedSlot)\n      this.nengiClient.addCommand(ModToolbarCommand)\n\n    } else {\n        if (this.oldState.toolbar.selectedSlot !== newState.toolbar.selectedSlot) {\n          const ModToolbarCommand = new ModifyToolbarCommand(newState.toolbar.selectedSlot)\n          this.nengiClient.addCommand(ModToolbarCommand)\n          debugger\n        }\n    }\n    // Trigger UIActions, then empty the actions array\n\n    // const ModToolbarCommand = new ModifyToolbarCommand(newState.toolbar.selectedSlot)\n    // this.nengiClient.addCommand(ModToolbarCommand)\n\n    // Optimise later - you'll alwayhs need to do atleast 1 action this way\n    // if (this.oldState.toolbar.selectedSlot !== newState.toolbar.selectedSlot) {\n    //   const ModToolbarCommand = new ModifyToolbarCommand(newState.toolbar.selectedSlot)\n    //   this.nengiClient.addCommand(ModToolbarCommand)\n    //   debugger\n    // }\n\n    this.oldState = newState\n\n\n  }\n\n\n  public preload() {\n    this.load.image(\"player\", \"survivor-shotgun.png\");\n\n    this.load.image(\"tiles\", \"tuxmon-sample-32px-extruded.png\");\n    this.load.tilemapTiledJSON(this.levelName, this.levelName + \".json\");\n  }\n\n  public create(data: any) {\n    this.map = this.make.tilemap({ key: this.levelName });\n\n    const tileset = this.map.addTilesetImage(\n      \"tuxmon-sample-32px-extruded\",\n      \"tiles\"\n    );\n\n    //@ts-ignore\n    this.map.createStaticLayer(\n      \"Below Player\",\n      tileset,\n      0,\n      0\n    );\n\n    //@ts-ignore\n\n    this.worldLayer = this.map.createStaticLayer(\"World\", tileset, 0, 0);\n    // this.worldLayer.setCollisionByProperty({ collides: true });\n\n    // ------------ NENGI ------------------//\n\n    this.simulator = new Simulator(this.nengiClient, this, this.map);\n\n    this.nengiClient.onConnect((res) => {\n      console.log(\"onConnect response:\", res);\n    });\n\n    this.nengiClient.onClose(() => {\n      console.log(\"connection closed\");\n    });\n\n    this.nengiClient.on(\"connected\", (res) => {\n      console.log(\"connection?:\", res);\n    });\n    this.nengiClient.on(\"disconnected\", () => {\n      console.log(\"connection closed\");\n    });\n\n    this.nengiClient.connect(\"ws://localhost:8079\");\n\n    // console.log(\"Requesting to join game in 5 seconds\")\n\n    console.log(\"Requesting to join game\")\n    const RequestJoinGameCommand = new RequestJoinGame(\"\")\n    this.nengiClient.addCommand(RequestJoinGameCommand)\n\n  }\n\n  public update() {\n\n    // Compute delta time since last update.\n    const now_ts = +new Date();\n    const last_ts = this.last_ts || now_ts;\n    const dt_sec = (now_ts - last_ts) / 1000.0;\n    this.last_ts = now_ts;\n\n    const network = this.nengiClient.readNetwork();\n\n    network.entities.forEach((snapshot: any) => {\n      snapshot.createEntities.forEach((entity: any) => {\n        console.log(`creating new ${entity.protocol.name} entity `, entity)\n        this.simulator.createEntity(entity)\n      })\n\n      snapshot.updateEntities.forEach((update: any) => {\n\n        this.simulator.updateEntity(update)\n      })\n\n      snapshot.deleteEntities.forEach((id: number) => {\n        console.log(`Deleting entity `, id)\n        this.simulator.deleteEntity(id)\n      })\n    })\n\n    network.messages.forEach((message: any) => {\n      console.log(`Recieved ${message.protocol.name} message:`, message);\n      this.simulator.processMessage(message)\n    });\n\n    this.simulator.update(dt_sec);\n    this.nengiClient.update();\n  }\n}\n","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/scenes/level-one.ts",["123","124"],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/game/index.ts",[],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/app/store.ts",[],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/counter/counterSlice.ts",[],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/counter/counterAPI.ts",[],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/counter/Counter.tsx",[],["125","126"],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/app/hooks.ts",[],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/toolbar/toolbarSlice.ts",["127","128","129","130"],"import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\n\nexport interface Toolbar {\n  selectedSlot: number;\n  slotData: ToolbarSlot[];\n}\n\ntype ToolbarSlot = {\n    name: string;\n    image: string;\n}\n\nconst initialState: Toolbar = {\n  selectedSlot: 0,\n    slotData: [\n        {\n            name: \"pistol\", image: \"./toolbar-pistol.png\"\n        },\n        {\n            name: \"smg\", image: \"./toolbar_smg.png\"\n        },\n        {\n            name: \"\", image: \"\"\n        },\n        {\n            name: \"\", image: \"\"\n        },\n    ],\n};\n\nexport const toolbarSlice = createSlice({\n  name: 'toolbar',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    changeSlot: (state, action) => {\n      state.selectedSlot = action.payload;\n    },\n  },\n});\n\nexport const { changeSlot } = toolbarSlice.actions;\n\nexport const changeToSlot = (index: number) => {\n    changeSlot(index)\n}\n\nexport default toolbarSlice.reducer;","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/toolbar/Toolbar.tsx",["131"],"import React, { useState } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport { changeSlot } from \"./toolbarSlice\";\n\nexport function Toolbar() {\n  const selectedSlot = useAppSelector((state) => state.toolbar.selectedSlot);\n  const slotData = useAppSelector((state) => state.toolbar.slotData);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <div className=\"flex p-2 fixed bottom-2 left-2 select-none\">\n      {slotData.map((data, index) => {\n        return (\n            <div className={`\n                m-1 border-2 bg-opacity-50 ${selectedSlot === index ? \"border-white border-4 bg-gray-200\" : \"border-grey bg-gray-600\"}\n            `}>\n            <div style={{ backgroundImage:`url(${data.image})` }} className=\"h-20 w-20 bg-center\" onClick={() => dispatch(changeSlot(index))}>\n                    {/* <img src={data.image} alt=\"\" className=\"object-cover\" /> */}\n                </div>\n\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/gameinfo/gameInfoSlice.ts",["132","133","134"],"import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport ZombieWaveMessage from '../../../../common/message/ZombieWaveMessage';\nimport { RootState, AppThunk } from '../../app/store';\n\nexport interface GameInfo extends ZombieWaveMessage{}\n\nconst initialState: GameInfo = {\n  currentWave: 0,\n  waveSize: 0,\n  zombiesRemaining: 0,\n  zombiesKilled: 0,\n  zombiesAlive: 0,\n  playersAlive: 0,\n  playersTotal: 0,\n  gameStatus : \"N/A\"\n};\n\n\nexport const gameInfoSlice = createSlice({\n  name: 'gameinfo',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    updateGameInfo: (state, action: PayloadAction<GameInfo>) => {\n      return {...state, ...action.payload}\n    },\n  },\n});\n\nexport const { updateGameInfo } = gameInfoSlice.actions;\n\n// export const changeToSlot = (index: number) => {\n//     changeSlot(index)\n// }\n\nexport default gameInfoSlice.reducer;","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/gameinfo/GameInfo.tsx",["135","136"],"import React, { useState } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\n\nexport function GameInfo() {\n  const gameInfo = useAppSelector((state) => state.gameInfo);\n\n  return (\n    <div className=\"text-white flex-col p-2 fixed top-2 left-2 w-80 select-none bg-opacity-50 border-grey bg-gray-600 m-1 border-2\">\n      {/* {gameInfo.currentWave} */}\n      <div className=\"p-2 border-bottom border-gray-600\">\n        Game State : {gameInfo.gameStatus}\n      </div>\n      <div className=\"p-2 border-bottom border-gray-600\">\n        Zombies Remaining : {gameInfo.zombiesRemaining}\n      </div>\n      <div className=\"p-2 border-bottom border-gray-600\">\n        Zombies Killed : {gameInfo.zombiesKilled}\n      </div>\n      <div className=\"p-2 border-bottom border-gray-600\">\n        Zombies Alive : {gameInfo.zombiesAlive}\n      </div>\n      <div className=\"p-2 border-bottom border-gray-600\">\n        Players : {gameInfo.playersAlive}\n      </div>\n    </div>\n  );\n}\n","/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/playerhud/playerHUDSlice.ts",["137","138","139"],"/home/wsl-tom/git/side-projects/2d-shooter-2020-nengi-port/frontend/src/features/playerhud/PlayerHUD.tsx",["140","141"],"import React, { useState } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\n\nexport function PlayerHUD() {\n  const playerHud = useAppSelector((state) => state.playerHUD);\n\n  let className=\"bg-green-500 bg-opacity-30 \"\n\n  if (playerHud.health >30 && playerHud.health <70) {\n    className=\"bg-yellow-500 bg-opacity-30 \"\n  }\n\n  if (playerHud.health <30) {\n    className=\"bg-red-500 bg-opacity-30 \"\n\n  }\n\n  return (\n    <div className=\"text-white fixed bottom-2 right-2 w-80 select-none bg-opacity-50 border-grey bg-gray-600 m-1 border-2\">\n      {/* <div className=\"shadow w-full bg-grey-light mt-2\"> */}\n      <span className=\"text-xs font-semibold py-1 px-2 uppercase rounded-full text-amber-600 bg-amber-200\">\n            Health\n          </span>\n      <div style={{ width: playerHud.health + \"%\" }} className={`${className} text-xs leading-none py-1 text-center text-white`}>\n          {playerHud.health}\n        {/* </div> */}\n      </div>\n\n      {/* <div className=\"relative pt-1\">\n        <div className=\"flex mb-2 items-center justify-between\">\n          <div>\n            <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-amber-600 bg-amber-200\">\n              Health\n            </span>\n          </div>\n          <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-amber-200\"></div>\n        </div>\n      </div> */}\n    </div>\n  );\n}\n",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":78,"column":11,"nodeType":"148","messageId":"149","endLine":78,"endColumn":21},{"ruleId":"146","severity":1,"message":"150","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":19},{"ruleId":"142","replacedBy":"151"},{"ruleId":"144","replacedBy":"152"},{"ruleId":"146","severity":1,"message":"153","line":13,"column":8,"nodeType":"148","messageId":"149","endLine":13,"endColumn":25},{"ruleId":"146","severity":1,"message":"154","line":14,"column":8,"nodeType":"148","messageId":"149","endLine":14,"endColumn":24},{"ruleId":"146","severity":1,"message":"155","line":110,"column":19,"nodeType":"148","messageId":"149","endLine":110,"endColumn":51},{"ruleId":"146","severity":1,"message":"153","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":25},{"ruleId":"146","severity":1,"message":"154","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":24},{"ruleId":"146","severity":1,"message":"156","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"157","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":19},{"ruleId":"146","severity":1,"message":"156","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"158","line":6,"column":10,"nodeType":"148","messageId":"149","endLine":6,"endColumn":21},{"ruleId":"142","replacedBy":"159"},{"ruleId":"144","replacedBy":"160"},{"ruleId":"146","severity":1,"message":"161","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"162","line":1,"column":41,"nodeType":"148","messageId":"149","endLine":1,"endColumn":54},{"ruleId":"146","severity":1,"message":"163","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":19},{"ruleId":"146","severity":1,"message":"164","line":2,"column":21,"nodeType":"148","messageId":"149","endLine":2,"endColumn":29},{"ruleId":"146","severity":1,"message":"165","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"161","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"163","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":19},{"ruleId":"146","severity":1,"message":"164","line":3,"column":21,"nodeType":"148","messageId":"149","endLine":3,"endColumn":29},{"ruleId":"146","severity":1,"message":"165","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"166","line":3,"column":26,"nodeType":"148","messageId":"149","endLine":3,"endColumn":40},{"ruleId":"146","severity":1,"message":"161","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"163","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":19},{"ruleId":"146","severity":1,"message":"164","line":3,"column":21,"nodeType":"148","messageId":"149","endLine":3,"endColumn":29},{"ruleId":"146","severity":1,"message":"165","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"166","line":3,"column":26,"nodeType":"148","messageId":"149","endLine":3,"endColumn":40},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"@typescript-eslint/no-unused-vars","'belowLayer' is assigned a value but never used.","Identifier","unusedVar","'ArrowKeys' is defined but never used.",["167"],["168"],"'ZombieWaveMessage' is defined but never used.","'ClientHudMessage' is defined but never used.","'typedMessage' is assigned a value but never used.","'nengi' is defined but never used.","'nengiConfig' is defined but never used.","'SCENE_NAMES' is defined but never used.",["167"],["168"],"'createAsyncThunk' is defined but never used.","'PayloadAction' is defined but never used.","'RootState' is defined but never used.","'AppThunk' is defined but never used.","'useState' is defined but never used.","'useAppDispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]